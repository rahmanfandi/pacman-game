
BITMAP *maze;        //**fungsi menggambar peta beserta objeknya**
BITMAP *pagar;
BITMAP *pager;
BITMAP *jalan; 
int pet[20][21] = {
{2,	2,	2,	2,	2,	2,	2,	2,	2,	2,	2,	2,	2,	2,	2,	2,	2,	2,	2,	2,1},
{2,	1,	1,	1,	1,	1,	1,	1,	1,	2,	1,	1,	1,	1,	1,	1,	1,	1,	1,	2,1},
{2,	1,	2,	2,	1,	2,	2,	2,	1,	2,	1,	2,	2,	1,	2,	2,	1,	2,	1,	2,1},
{2,	1,	2,	2,	1,	2,	2,	2,	1,	2,	1,	2,	2,	1,	2,	2,	1,	2,	1,	2,1},
{2,	1,	1,	1,	1,	2,	2,	2,	1,	2,	1,	2,	2,	1,	1,	1,	1,	1,	1,	2,1},
{2,	1,	2,	2,	1,	1,	1,	1,	1,	1,	1,	1,	1,	1,	2,	2,	2,	2,	2,	2,2},
{2,	2,	2,	2,	2,	2,	2,	1,	2,	3,	3,	3,	2,	1,	2,	2,	2,	2,	2,	2,2},
{1,	1,	1,	1,	1,	1,	1,	1,	2,	1,	1,	1,	2,	1,	1,	1,	1,	1,	1,	1,1},
{2,	2,	2,	2,	2,	2,	2,	1,	2,	1,	1,	1,	2,	1,	2,	2,	2,	2,	2,	2,2},
{2,	2,	2,	2,	2,	2,	2,	1,	2,	2,	2,	2,	2,	1,	2,	2,	2,	2,	2,	2,2},
{2,	1,	1,	1,	1,	1,	1,	1,	1,	1,	2,	1,	1,	1,	1,	1,	1,	1,	1,	2,1},
{2,	1,	2,	2,	2,	1,	2,	2,	2,	1,	2,	1,	2,	2,	1,	2,	2,	2,	1,	2,1},
{2,	1,	1,	2,	1,	1,	1,	1,	1,	1,	1,	1,	1,	1,	1,	1,	2,	1,	1,	2,1},
{2,	2,	1,	2,	1,	2,	1,	2,	2,	2,	2,	2,	2,	1,	2,	1,	2,	1,	2,	2,1},
{2,	1,	1,	1,	1,	2,	1,	1,	1,	2,	1,	1,	1,	1,	2,	1,	1,	1,	1,	2,1},
{2,	1,	2,	2,	2,	2,	2,	2,	1,	2,	1,	2,	1,	2,	2,	2,	2,	2,	1,	2,1},
{2,	1,	1,	1,	1,	1,	1,	1,	1,	2,	1,	2,	1,	2,	1,	1,	1,	1,	1,	2,1},
{2,	1,	2,	2,	1,	2,	2,	2,	1,	1,	1,	2,	1,	2,	1,	2,	2,	2,	1,	2,1},
{2,	1,	1,	1,	1,	1,	1,	1,	1,	2,	1,	1,	1,	1,	1,	1,	1,	1,	1,	2,1},
{2,	2,	2,	2,	2,	2,	2,	2,	2,	2,	2,	2,	2,	2,	2,	2,	2,	2,	2,	2,1},
};
int isipeta[20][20];
int objekpeta[20][20] = {
{2,	2,	2,	2,	2,	2,	2,	2,	2,	2,	2,	2,	2,	2,	2,	2,	2,	2,	2,	2,},
{2,	1,	1,	1,	1,	1,	1,	1,	1,	2,	1,	1,	1,	1,	1,	1,	1,	1,	1,	2,},
{2,	1,	2,	2,	1,	2,	2,	2,	1,	2,	1,	2,	2,	1,	2,	2,	1,	2,	1,	2,},
{2,	1,	2,	2,	1,	2,	2,	2,	1,	2,	1,	2,	2,	1,	2,	2,	1,	2,	1,	2,},
{2,	1,	1,	1,	1,	2,	2,	2,	1,	2,	1,	2,	2,	1,	1,	1,	1,	1,	1,	2,},
{2,	1,	2,	2,	1,	0,	0,	0,	0,	0,	0,	0,	0,	0,	2,	2,	2,	2,	2,	2,},
{2,	2,	2,	2,	2,	2,	2,	0,	2,	3,	3,	3,	2,	0,	2,	2,	2,	2,	2,	2,},
{0,	0,	0,	0,	0,	0,	0,	0,	2,	0,	0,	0,	2,	0,	0,	0,	0,	0,	0,	0,},
{2,	2,	2,	2,	2,	2,	2,	0,	2,	0,	0,	0,	2,	0,	2,	2,	2,	2,	2,	2,},
{2,	2,	2,	2,	2,	2,	2,	0,	2,	2,	2,	2,	2,	0,	2,	2,	2,	2,	2,	2,},
{2,	1,	1,	1,	1,	1,	1,	1,	1,	1,	2,	1,	1,	1,	1,	1,	1,	1,	1,	2,},
{2,	1,	2,	2,	2,	1,	2,	2,	2,	1,	2,	1,	2,	2,	1,	2,	2,	2,	1,	2,},
{2,	1,	1,	2,	1,	1,	1,	1,	1,	1,	1,	1,	1,	1,	1,	1,	2,	1,	1,	2,},
{2,	2,	1,	2,	1,	2,	1,	2,	2,	2,	2,	2,	2,	1,	2,	1,	2,	1,	2,	2,},
{2,	1,	1,	1,	1,	2,	1,	1,	1,	2,	1,	1,	1,	1,	2,	1,	1,	1,	1,	2,},
{2,	1,	2,	2,	2,	2,	2,	2,	1,	2,	1,	2,	1,	2,	2,	2,	2,	2,	1,	2,},
{2,	1,	1,	1,	1,	1,	1,	1,	1,	2,	1,	2,	1,	2,	1,	1,	1,	1,	3,	2,},
{2,	1,	2,	2,	1,	2,	2,	2,	1,	1,	1,	2,	1,	2,	1,	2,	2,	2,	1,	2,},
{2,	1,	1,	1,	1,	1,	1,	1,	1,	2,	1,	1,	1,	1,	1,	1,	1,	1,	1,	2,},
{2,	2,	2,	2,	2,	2,	2,	2,	2,	2,	2,	2,	2,	2,	2,	2,	2,	2,	2,	2,},
};






int skor_menang=0;

void set_map(){
maze = create_bitmap( 500,500);
pager=load_bitmap("pic/tembokbiru.bmp", NULL);
pagar=load_bitmap("pic/pagar.bmp",NULL);
jalan = create_bitmap(40,40);     
}

void peta(){
for (int i = 0; i <= 20; i++){for( int t = 0; t < 20; t++){
isipeta[i][t]=objekpeta[i][t];}}

rectfill( jalan,0,0,45,45, makecol( 0,0,0));
for (int i = 0; i <= 20; i++){for( int t = 0; t < 20; t++){
if(pet[i][t] == 1) rectfill( maze,t*25,i*25,(t + 1)*25,(i + 1)*25, makecol( 0,0,0));
if(pet[i][t] == 3) blit(pagar,maze,0,0,t*25,i*25,40,40);
if(pet[i][t] == 2) blit(pager,maze,0,0,t*25,i*25,40,40);
}}  

for (int i = 0; i <= 20; i++){for( int t = 0; t < 20; t++){
if(pet[i][t] == 1)draw_sprite(maze,jalan,(t*25)-6,(i*25)-6);
}}
skor_menang=0;
for (int i = 0; i <= 20; i++){
for( int t = 0; t < 20; t++){
    if(isipeta[i][t] == 1){
circlefill(maze,(t*25)+12,(i*25)+12,2,makecol(0,200,64));
skor_menang++;
}}}
}   



void bersihkanMemory(){
destroy_bitmap(maze);
destroy_bitmap(pagar);
destroy_bitmap(pager);
destroy_bitmap(jalan);
//destroy_bitmap(hantuh); 
//destroy_bitmap(kuningh);
//for(int i=0; i<6;i++){
//destroy_bitmap(kuning[i]);
//destroy_bitmap(hantu[i]);
//}
}
